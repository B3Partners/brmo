#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// nl.b3p.brmo.service.testutil.TestUtil
	c156 [label=<<table title="nl.b3p.brmo.service.testutil.TestUtil" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../testutil/TestUtil.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> TestUtil </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # haveSetupJNDI : boolean </td></tr>
<tr><td align="left" balign="left"> # DBPROPS : Properties </td></tr>
<tr><td align="left" balign="left"> # isOracle : boolean </td></tr>
<tr><td align="left" balign="left"> # isMsSQL : boolean </td></tr>
<tr><td align="left" balign="left"> # isPostgis : boolean </td></tr>
<tr><td align="left" balign="left"> # dsStaging : BasicDataSource </td></tr>
<tr><td align="left" balign="left"> # dsRsgb : BasicDataSource </td></tr>
<tr><td align="left" balign="left"> # dsRsgbBgt : BasicDataSource </td></tr>
<tr><td align="left" balign="left"> + name : TestName </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TestUtil() </td></tr>
<tr><td align="left" balign="left"> + checkDatabaseIsProvided() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setUp() </font></td></tr>
<tr><td align="left" balign="left"> + loadDBprop() </td></tr>
<tr><td align="left" balign="left"> + startTest() </td></tr>
<tr><td align="left" balign="left"> + endTest() </td></tr>
<tr><td align="left" balign="left"> # setupJNDI() </td></tr>
		</table></td></tr>
		</table>>, URL="../testutil/TestUtil.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.service.scanner.AfgifteNummerScannerIntegrationTest
	c157 [label=<<table title="nl.b3p.brmo.service.scanner.AfgifteNummerScannerIntegrationTest" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AfgifteNummerScannerIntegrationTest.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AfgifteNummerScannerIntegrationTest </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AfgifteNummerScannerIntegrationTest(sBestandsNaam : String, lAantalLaadProcessen : long, iAantalOntbrekendeNummerRanges : int, sContractNummer : String, sContractNummers : String[], iAantalOntbrekendRecords : int) </td></tr>
<tr><td align="left" balign="left"> + testdata() : Collection&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setUp() </td></tr>
<tr><td align="left" balign="left"> + tearDown() </td></tr>
<tr><td align="left" balign="left"> + testGetOntbrekendeAfgiftenummersDefault() </td></tr>
<tr><td align="left" balign="left"> + testGetOntbrekendeKlantAfgiftenummers() </td></tr>
<tr><td align="left" balign="left"> + testGetOntbrekendeContractAfgiftenummers() </td></tr>
<tr><td align="left" balign="left"> + testInsertOntbrekendeContractAfgiftenummers() </td></tr>
<tr><td align="left" balign="left"> + testInsertOntbrekendeKlantAfgiftenummers() </td></tr>
<tr><td align="left" balign="left"> + testGetOntbrekendeContractAfgiftenummersZonderContractnummer() </td></tr>
<tr><td align="left" balign="left"> + testContractnummers() </td></tr>
		</table></td></tr>
		</table>>, URL="./AfgifteNummerScannerIntegrationTest.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//nl.b3p.brmo.service.scanner.AfgifteNummerScannerIntegrationTest extends nl.b3p.brmo.service.testutil.TestUtil
	c156:p -> c157:p [dir=back,arrowtail=empty];
	// nl.b3p.brmo.service.scanner.AfgifteNummerScannerIntegrationTest NAVASSOC nl.b3p.brmo.loader.BrmoFramework
	c157:p -> c163:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.brmo.service.scanner.AfgifteNummerScannerIntegrationTest NAVASSOC nl.b3p.brmo.service.scanner.AfgifteNummerScanner
	c157:p -> c167:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.brmo.service.scanner.AfgifteNummerScanner
	c167 [label=<<table title="nl.b3p.brmo.service.scanner.AfgifteNummerScanner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AfgifteNummerScanner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AfgifteNummerScanner(arg0 : AfgifteNummerScannerProces) </td></tr>
<tr><td align="left" balign="left"> + contractnummers() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + execute() </td></tr>
<tr><td align="left" balign="left"> + execute(arg0 : ProgressUpdateListener) </td></tr>
<tr><td align="left" balign="left"> ~ insertOntbrekendeAfgiftenummers(arg0 : long, arg1 : long, arg2 : String, arg3 : String) : long </td></tr>
<tr><td align="left" balign="left"> ~ getOntbrekendeAfgiftenummers(arg0 : String, arg1 : String) : List&lt;Map&lt;String, Object&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getOntbrekendeNummersGevonden() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.BrmoFramework
	c163 [label=<<table title="nl.b3p.brmo.loader.BrmoFramework" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BrmoFramework </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BR_BAG : String </td></tr>
<tr><td align="left" balign="left"> + BR_BRK : String </td></tr>
<tr><td align="left" balign="left"> + BR_NHR : String </td></tr>
<tr><td align="left" balign="left"> + BR_BGTLIGHT : String </td></tr>
<tr><td align="left" balign="left"> + BR_TOPNL : String </td></tr>
<tr><td align="left" balign="left"> + BR_BRP : String </td></tr>
<tr><td align="left" balign="left"> + BR_GBAV : String </td></tr>
<tr><td align="left" balign="left"> + XSL_BRK : String </td></tr>
<tr><td align="left" balign="left"> + XSL_BAG : String </td></tr>
<tr><td align="left" balign="left"> + XSL_NHR : String </td></tr>
<tr><td align="left" balign="left"> + XSL_BRP : String </td></tr>
<tr><td align="left" balign="left"> + XSL_GBAV : String </td></tr>
<tr><td align="left" balign="left"> + LAADPROCES_TABEL : String </td></tr>
<tr><td align="left" balign="left"> + BERICHT_TABLE : String </td></tr>
<tr><td align="left" balign="left"> + JOB_TABLE : String </td></tr>
<tr><td align="left" balign="left"> + BRMO_METADATA_TABEL : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BrmoFramework(arg0 : DataSource, arg1 : DataSource) </td></tr>
<tr><td align="left" balign="left"> + BrmoFramework(arg0 : DataSource, arg1 : DataSource, arg2 : DataSource) </td></tr>
<tr><td align="left" balign="left"> + BrmoFramework(arg0 : DataSource, arg1 : DataSource, arg2 : DataSource, arg3 : DataSource) </td></tr>
<tr><td align="left" balign="left"> + setDataSourceRsgbBgt(arg0 : DataSource) </td></tr>
<tr><td align="left" balign="left"> + setDataSourceTopNL(arg0 : DataSource) </td></tr>
<tr><td align="left" balign="left"> + getStagingVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getRsgbVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getRsgbBgtVersion() : String </td></tr>
<tr><td align="left" balign="left"> + setEnablePipeline(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setRenewConnectionAfterCommit(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setTransformPipelineCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + setBatchCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + setLimitStandBerichtenToTransform(arg0 : Integer) </td></tr>
<tr><td align="left" balign="left"> + setOrderBerichten(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setErrorState(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + closeBrmoFramework() </td></tr>
<tr><td align="left" balign="left"> + toRsgb() : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(arg0 : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(arg0 : Bericht.STATUS, arg1 : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(arg0 : RsgbProxy.BerichtSelectMode, arg1 : long[], arg2 : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(arg0 : UpdateProcess, arg1 : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + delete(arg0 : Long) </td></tr>
<tr><td align="left" balign="left"> + listLaadProcessen() : List&lt;LaadProces&gt; </td></tr>
<tr><td align="left" balign="left"> + listBerichten() : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + loadFromFile(arg0 : String, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + loadFromFile(arg0 : String, arg1 : String, arg2 : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromFile(arg0 : String, arg1 : String, arg2 : ProgressUpdateListener, arg3 : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(arg0 : String, arg1 : InputStream, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(arg0 : String, arg1 : InputStream, arg2 : String, arg3 : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(arg0 : String, arg1 : InputStream, arg2 : String, arg3 : Date) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(arg0 : String, arg1 : InputStream, arg2 : String, arg3 : Date, arg4 : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(arg0 : String, arg1 : InputStream, arg2 : String, arg3 : ProgressUpdateListener, arg4 : Long) </td></tr>
<tr><td align="left" balign="left"> + emptyStagingDb() </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesIdByFileName(arg0 : String) : Long </td></tr>
<tr><td align="left" balign="left"> + getBerichtById(arg0 : long) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesById(arg0 : long) : LaadProces </td></tr>
<tr><td align="left" balign="left"> + getBerichten(arg0 : int, arg1 : int, arg2 : int, arg3 : String, arg4 : String, arg5 : String, arg6 : String) : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + getLaadprocessen(arg0 : int, arg1 : int, arg2 : int, arg3 : String, arg4 : String, arg5 : String, arg6 : String) : List&lt;LaadProces&gt; </td></tr>
<tr><td align="left" balign="left"> + getLaadProcessenIds(arg0 : String, arg1 : String, arg2 : String, arg3 : String) : Long[] </td></tr>
<tr><td align="left" balign="left"> + getCountBerichten(arg0 : String, arg1 : String, arg2 : String, arg3 : String) : long </td></tr>
<tr><td align="left" balign="left"> + getCountLaadProcessen(arg0 : String, arg1 : String, arg2 : String, arg3 : String) : long </td></tr>
<tr><td align="left" balign="left"> + getCountJob() : long </td></tr>
<tr><td align="left" balign="left"> + updateLaadProcesMeta(arg0 : Long, arg1 : BigInteger, arg2 : BigInteger, arg3 : String, arg4 : String, arg5 : String, arg6 : String, arg7 : String, arg8 : Date) </td></tr>
<tr><td align="left" balign="left"> + checkAfgiftelijst(arg0 : String, arg1 : String) : File </td></tr>
<tr><td align="left" balign="left"> + checkAfgiftelijst(arg0 : String, arg1 : InputStream, arg2 : File) : File </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

