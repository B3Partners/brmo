#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// nl.b3p.brmo.loader.RsgbBRPTransformer
	c51 [label=<<table title="nl.b3p.brmo.loader.RsgbBRPTransformer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RsgbBRPTransformer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RsgbBRPTransformer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RsgbBRPTransformer(pathToXsl : String, staging : StagingProxy) </td></tr>
<tr><td align="left" balign="left"> + transformToDbXml(bericht : Bericht) : String </td></tr>
<tr><td align="left" balign="left"> + transformToDbXmlNode(bericht : Bericht) : Node </td></tr>
<tr><td align="left" balign="left"> # merge(oldFile : String, newFile : String) : Document </td></tr>
<tr><td align="left" balign="left"> # print(doc : Document) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RsgbBRPTransformer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.RsgbProxy
	c52 [label=<<table title="nl.b3p.brmo.loader.RsgbProxy" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RsgbProxy.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RsgbProxy </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RsgbProxy(dataSourceRsgb : DataSource, stagingProxy : StagingProxy, status : Bericht.STATUS, listener : ProgressUpdateListener) </td></tr>
<tr><td align="left" balign="left"> + RsgbProxy(dataSourceRsgb : DataSource, stagingProxy : StagingProxy, mode : RsgbProxy.BerichtSelectMode, ids : long[], listener : ProgressUpdateListener) </td></tr>
<tr><td align="left" balign="left"> + RsgbProxy(dataSourceRsgb : DataSource, stagingProxy : StagingProxy, updateProcess : UpdateProcess, listener : ProgressUpdateListener) </td></tr>
<tr><td align="left" balign="left"> + setSimonNamePrefix(prefix : String) </td></tr>
<tr><td align="left" balign="left"> + setEnablePipeline(enablePipeline : boolean) </td></tr>
<tr><td align="left" balign="left"> + setPipelineCapacity(pipelineCapacity : int) </td></tr>
<tr><td align="left" balign="left"> + setRenewConnectionAfterCommit(renewConnectionAfterCommit : boolean) </td></tr>
<tr><td align="left" balign="left"> + setOrderBerichten(orderBerichten : boolean) </td></tr>
<tr><td align="left" balign="left"> + setErrorState(errorState : String) </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + checkAndCloseStatement(stmt : PreparedStatement) </td></tr>
<tr><td align="left" balign="left"> + checkAndAddStatement(m : Map&lt;String, PreparedStatement&gt;, tableName : String, stmt : PreparedStatement) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + renewConnection() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + updateProcessingResult(ber : Bericht) </td></tr>
<tr><td align="left" balign="left"> + transformToTableData(ber : Bericht) : List&lt;TableData&gt; </td></tr>
<tr><td align="left" balign="left"> + transformUpdateTableData(ber : Bericht) : List&lt;TableData&gt; </td></tr>
<tr><td align="left" balign="left"> + updateBerichtException(ber : Bericht, e : Throwable) </td></tr>
<tr><td align="left" balign="left"> + updateBerichtProcessing(ber : Bericht) </td></tr>
<tr><td align="left" balign="left"> + handle(ber : Bericht, pretransformedTableData : List&lt;TableData&gt;, updateResult : boolean) </td></tr>
<tr><td align="left" balign="left"> + update(jobBericht : Bericht, pretransformedTableData : List&lt;TableData&gt;) </td></tr>
<tr><td align="left" balign="left"> + isAlreadyInMetadata(row : TableRow, loadLog : StringBuilder) : boolean </td></tr>
<tr><td align="left" balign="left"> + getHerkomstMetadata() : String </td></tr>
<tr><td align="left" balign="left"> + setHerkomstMetadata(herkomstMetadata : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./RsgbProxy.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.RsgbProxy.BerichtSelectMode
	c53 [label=<<table title="nl.b3p.brmo.loader.RsgbProxy.BerichtSelectMode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RsgbProxy.BerichtSelectMode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> BerichtSelectMode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> BY_STATUS </td></tr>
<tr><td align="left" balign="left"> BY_IDS </td></tr>
<tr><td align="left" balign="left"> BY_LAADPROCES </td></tr>
<tr><td align="left" balign="left"> FOR_UPDATE </td></tr>
<tr><td align="left" balign="left"> RETRY_WAITING </td></tr>
		</table></td></tr>
		</table>>, URL="./RsgbProxy.BerichtSelectMode.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.ProgressUpdateListener
	c54 [label=<<table title="nl.b3p.brmo.loader.ProgressUpdateListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProgressUpdateListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ProgressUpdateListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + total(total : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + progress(progress : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + exception(t : Throwable) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ProgressUpdateListener.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.BrmoFramework
	c55 [label=<<table title="nl.b3p.brmo.loader.BrmoFramework" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BrmoFramework.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BrmoFramework </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BR_BAG : String </td></tr>
<tr><td align="left" balign="left"> + BR_BRK : String </td></tr>
<tr><td align="left" balign="left"> + BR_NHR : String </td></tr>
<tr><td align="left" balign="left"> + BR_BGTLIGHT : String </td></tr>
<tr><td align="left" balign="left"> + BR_TOPNL : String </td></tr>
<tr><td align="left" balign="left"> + BR_BRP : String </td></tr>
<tr><td align="left" balign="left"> + BR_GBAV : String </td></tr>
<tr><td align="left" balign="left"> + XSL_BRK : String </td></tr>
<tr><td align="left" balign="left"> + XSL_BAG : String </td></tr>
<tr><td align="left" balign="left"> + XSL_NHR : String </td></tr>
<tr><td align="left" balign="left"> + XSL_BRP : String </td></tr>
<tr><td align="left" balign="left"> + XSL_GBAV : String </td></tr>
<tr><td align="left" balign="left"> + LAADPROCES_TABEL : String </td></tr>
<tr><td align="left" balign="left"> + BERICHT_TABLE : String </td></tr>
<tr><td align="left" balign="left"> + JOB_TABLE : String </td></tr>
<tr><td align="left" balign="left"> + BRMO_METADATA_TABEL : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BrmoFramework(dataSourceStaging : DataSource, dataSourceRsgb : DataSource) </td></tr>
<tr><td align="left" balign="left"> + BrmoFramework(dataSourceStaging : DataSource, dataSourceRsgb : DataSource, dataSourceRsgbBgt : DataSource) </td></tr>
<tr><td align="left" balign="left"> + BrmoFramework(dataSourceStaging : DataSource, dataSourceRsgb : DataSource, dataSourceRsgbBgt : DataSource, dataSourceTopNL : DataSource) </td></tr>
<tr><td align="left" balign="left"> + setDataSourceRsgbBgt(dataSourceRsgbBgt : DataSource) </td></tr>
<tr><td align="left" balign="left"> + setDataSourceTopNL(dataSourceTopNL : DataSource) </td></tr>
<tr><td align="left" balign="left"> + getStagingVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getRsgbVersion() : String </td></tr>
<tr><td align="left" balign="left"> + getRsgbBgtVersion() : String </td></tr>
<tr><td align="left" balign="left"> + setEnablePipeline(enablePipeline : boolean) </td></tr>
<tr><td align="left" balign="left"> + setRenewConnectionAfterCommit(renewConnectionAfterCommit : boolean) </td></tr>
<tr><td align="left" balign="left"> + setTransformPipelineCapacity(pipelineCapacity : int) </td></tr>
<tr><td align="left" balign="left"> + setBatchCapacity(batchCapacity : int) </td></tr>
<tr><td align="left" balign="left"> + setLimitStandBerichtenToTransform(limitStandBerichtenToTransform : Integer) </td></tr>
<tr><td align="left" balign="left"> + setOrderBerichten(orderBerichten : boolean) </td></tr>
<tr><td align="left" balign="left"> + setErrorState(errorState : String) </td></tr>
<tr><td align="left" balign="left"> + closeBrmoFramework() </td></tr>
<tr><td align="left" balign="left"> + toRsgb() : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(listener : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(status : Bericht.STATUS, listener : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(mode : RsgbProxy.BerichtSelectMode, ids : long[], listener : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + toRsgb(updateProcess : UpdateProcess, listener : ProgressUpdateListener) : Thread </td></tr>
<tr><td align="left" balign="left"> + delete(id : Long) </td></tr>
<tr><td align="left" balign="left"> + listLaadProcessen() : List&lt;LaadProces&gt; </td></tr>
<tr><td align="left" balign="left"> + listBerichten() : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + loadFromFile(type : String, fileName : String) </td></tr>
<tr><td align="left" balign="left"> + loadFromFile(type : String, fileName : String, automatischProces : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromFile(type : String, fileName : String, listener : ProgressUpdateListener, automatischProces : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(type : String, stream : InputStream, fileName : String) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(type : String, stream : InputStream, fileName : String, automatischProces : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(type : String, stream : InputStream, fileName : String, d : Date) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(type : String, stream : InputStream, fileName : String, d : Date, automatischProces : Long) </td></tr>
<tr><td align="left" balign="left"> + loadFromStream(type : String, stream : InputStream, fileName : String, listener : ProgressUpdateListener, automatischProces : Long) </td></tr>
<tr><td align="left" balign="left"> + emptyStagingDb() </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesIdByFileName(name : String) : Long </td></tr>
<tr><td align="left" balign="left"> + getBerichtById(id : long) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesById(id : long) : LaadProces </td></tr>
<tr><td align="left" balign="left"> + getBerichten(page : int, start : int, limit : int, sort : String, dir : String, filterSoort : String, filterStatus : String) : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + getLaadprocessen(page : int, start : int, limit : int, sort : String, dir : String, filterSoort : String, filterStatus : String) : List&lt;LaadProces&gt; </td></tr>
<tr><td align="left" balign="left"> + getLaadProcessenIds(sort : String, dir : String, filterSoort : String, filterStatus : String) : Long[] </td></tr>
<tr><td align="left" balign="left"> + getCountBerichten(sort : String, dir : String, filterSoort : String, filterStatus : String) : long </td></tr>
<tr><td align="left" balign="left"> + getCountLaadProcessen(sort : String, dir : String, filterSoort : String, filterStatus : String) : long </td></tr>
<tr><td align="left" balign="left"> + getCountJob() : long </td></tr>
<tr><td align="left" balign="left"> + updateLaadProcesMeta(lpId : Long, klantafgiftenummer : BigInteger, contractafgiftenummer : BigInteger, artikelnummer : String, contractnummer : String, afgifteid : String, afgiftereferentie : String, bestandsreferentie : String, beschikbaar_tot : Date) </td></tr>
<tr><td align="left" balign="left"> + checkAfgiftelijst(bestandsnaam : String, output : String) : File </td></tr>
<tr><td align="left" balign="left"> + checkAfgiftelijst(bestandsnaam : String, is : InputStream, output : File) : File </td></tr>
		</table></td></tr>
		</table>>, URL="./BrmoFramework.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.StagingProxy
	c56 [label=<<table title="nl.b3p.brmo.loader.StagingProxy" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StagingProxy.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StagingProxy </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StagingProxy(dataSourceStaging : DataSource) </td></tr>
<tr><td align="left" balign="left"> + closeStagingProxy() </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesById(id : Long) : LaadProces </td></tr>
<tr><td align="left" balign="left"> + getBerichtById(id : Long) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getBerichtByLaadProces(lp : LaadProces) : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesByFileName(name : String) : LaadProces </td></tr>
<tr><td align="left" balign="left"> + getLaadProcesByRestoredFilename(name : String) : LaadProces </td></tr>
<tr><td align="left" balign="left"> + getExistingBericht(b : Bericht) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getCountJob() : long </td></tr>
<tr><td align="left" balign="left"> + removeJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + cleanJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + setBerichtenJobByStatus(status : Bericht.STATUS, orderBerichten : boolean) : long </td></tr>
<tr><td align="left" balign="left"> + setBerichtenJobForUpdate(soort : String, orderBerichten : boolean) : long </td></tr>
<tr><td align="left" balign="left"> + setBerichtenJobByIds(ids : long[], orderBerichten : boolean) : long </td></tr>
<tr><td align="left" balign="left"> + setBerichtenJobByLaadprocessen(laadprocesIds : long[], orderBerichten : boolean) : long </td></tr>
<tr><td align="left" balign="left"> + handleBerichtenByJob(total : long, handler : BerichtenHandler, enablePipeline : boolean, transformPipelineCapacity : int, orderBerichten : boolean) </td></tr>
<tr><td align="left" balign="left"> + updateBerichtenDbXml(berichten : List&lt;Bericht&gt;, transformer : RsgbTransformer) </td></tr>
<tr><td align="left" balign="left"> + getOldBericht(nieuwBericht : Bericht, loadLog : StringBuilder) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getOldBericht(objectRef : String, loadLog : StringBuilder) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getPreviousBericht(ber : Bericht, loadLog : StringBuilder) : Bericht </td></tr>
<tr><td align="left" balign="left"> + getPreviousBericht(objectRef : String, datum : Date, currentBerichtId : Long, loadLog : StringBuilder) : Bericht </td></tr>
<tr><td align="left" balign="left"> + updateBericht(b : Bericht) </td></tr>
<tr><td align="left" balign="left"> + updateBerichtProcessing(b : Bericht) </td></tr>
<tr><td align="left" balign="left"> + deleteByLaadProcesId(id : Long) </td></tr>
<tr><td align="left" balign="left"> + getLaadProcessen() : List&lt;LaadProces&gt; </td></tr>
<tr><td align="left" balign="left"> + getBerichten() : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + loadBr(stream : InputStream, type : String, fileName : String, d : Date, listener : ProgressUpdateListener) </td></tr>
<tr><td align="left" balign="left"> + loadBr(stream : InputStream, type : String, fileName : String, d : Date, listener : ProgressUpdateListener, automatischProces : Long) </td></tr>
<tr><td align="left" balign="left"> + writeBericht(b : Bericht) </td></tr>
<tr><td align="left" balign="left"> + updateLaadProcesStatus(lp : LaadProces, status : LaadProces.STATUS, opmerking : String) </td></tr>
<tr><td align="left" balign="left"> + updateLaadProcesMeta(lpId : Long, klantafgiftenummer : BigInteger, contractafgiftenummer : BigInteger, artikelnummer : String, contractnummer : String, afgifteid : String, afgiftereferentie : String, bestandsreferentie : String, beschikbaar_tot : Date) </td></tr>
<tr><td align="left" balign="left"> + updateLaadProcesBestandNaamHersteld(lp : LaadProces) </td></tr>
<tr><td align="left" balign="left"> + emptyStagingDb() </td></tr>
<tr><td align="left" balign="left"> + getBerichten(page : int, start : int, limit : int, sort : String, dir : String, filterSoort : String, filterStatus : String) : List&lt;Bericht&gt; </td></tr>
<tr><td align="left" balign="left"> + getCountBerichten(sort : String, dir : String, filterSoort : String, filterStatus : String) : long </td></tr>
<tr><td align="left" balign="left"> + getCountLaadProces(sort : String, dir : String, filterSoort : String, filterStatus : String) : long </td></tr>
<tr><td align="left" balign="left"> + getLaadprocessen(page : int, start : int, limit : int, sort : String, dir : String, filterSoort : String, filterStatus : String) : List&lt;LaadProces&gt; </td></tr>
<tr><td align="left" balign="left"> + getLaadProcessenIds(sort : String, dir : String, filterSoort : String, filterStatus : String) : Long[] </td></tr>
<tr><td align="left" balign="left"> ~ getOldBericht(nieuwBericht : Bericht) : Bericht </td></tr>
<tr><td align="left" balign="left"> + setBatchCapacity(batchCapacity : Integer) </td></tr>
<tr><td align="left" balign="left"> + setLimitStandBerichtenToTransform(limitStandBerichtenToTransform : Integer) </td></tr>
		</table></td></tr>
		</table>>, URL="./StagingProxy.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.brmo.loader.BerichtenHandler
	c57 [label=<<table title="nl.b3p.brmo.loader.BerichtenHandler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BerichtenHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BerichtenHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + updateBerichtProcessing(b : Bericht) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + transformToTableData(ber : Bericht) : List&lt;TableData&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + handle(b : Bericht, pretransformedTableData : List&lt;TableData&gt;, updateResult : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + updateProcessingResult(b : Bericht) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + renewConnection() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./BerichtenHandler.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//nl.b3p.brmo.loader.RsgbProxy implements nl.b3p.brmo.loader.BerichtenHandler
	c57:p -> c52:p [dir=back,arrowtail=empty,style=dashed];
	// nl.b3p.brmo.loader.RsgbBRPTransformer NAVASSOC nl.b3p.brmo.loader.StagingProxy
	c51:p -> c56:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.brmo.loader.RsgbProxy NAVASSOC nl.b3p.brmo.loader.ProgressUpdateListener
	c52:p -> c54:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.brmo.loader.RsgbProxy NAVASSOC nl.b3p.brmo.loader.RsgbProxy.BerichtSelectMode
	c52:p -> c53:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.brmo.loader.RsgbProxy NAVASSOC nl.b3p.brmo.loader.StagingProxy
	c52:p -> c56:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.brmo.loader.BrmoFramework NAVASSOC nl.b3p.brmo.loader.StagingProxy
	c55:p -> c56:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

