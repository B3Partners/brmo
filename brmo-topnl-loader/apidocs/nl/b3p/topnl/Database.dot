#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// nl.b3p.topnl.Processor
	c13434 [label=<<table title="nl.b3p.topnl.Processor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Processor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Processor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # log : Log </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Processor(ds : DataSource) </td></tr>
<tr><td align="left" balign="left"> + importIntoDb(in : URL, type : TopNLType) </td></tr>
<tr><td align="left" balign="left"> + parse(in : URL) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + convert(listOfJaxbObjects : List&lt;&gt;, type : TopNLType) : List&lt;TopNLEntity&gt; </td></tr>
<tr><td align="left" balign="left"> + save(entity : TopNLEntity, type : TopNLType) </td></tr>
<tr><td align="left" balign="left"> + save(entities : List&lt;TopNLEntity&gt;, type : TopNLType) </td></tr>
<tr><td align="left" balign="left"> + getStatus() : Processor.STATUS </td></tr>
<tr><td align="left" balign="left"> + resetStatus() </td></tr>
		</table></td></tr>
		</table>>, URL="./Processor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.topnl.Database
	c13439 [label=<<table title="nl.b3p.topnl.Database" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Database.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Database </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # log : Log </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Database(ds : DataSource) </td></tr>
<tr><td align="left" balign="left"> + save(entity : TopNLEntity) </td></tr>
<tr><td align="left" balign="left"> + getGjc() : GeometryJdbcConverter </td></tr>
		</table></td></tr>
		</table>>, URL="./Database.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.topnl.Processor NAVASSOC nl.b3p.topnl.Database
	c13434:p -> c13439:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.topnl.Database NAVASSOC nl.b3p.loader.jdbc.GeometryJdbcConverter
	c13439:p -> c13621:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.loader.jdbc.GeometryJdbcConverter
	c13621 [label=<<table title="nl.b3p.loader.jdbc.GeometryJdbcConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://b3partners.github.io/jdbc-util/apidocs/nl/b3p/loader/jdbc/GeometryJdbcConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> GeometryJdbcConverter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # gf : GeometryFactory </td></tr>
<tr><td align="left" balign="left"> # wkt : WKTReader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GeometryJdbcConverter() </td></tr>
<tr><td align="left" balign="left"> + convertToSQLObject(arg0 : String, arg1 : ColumnMetadata, arg2 : String, arg3 : String) : Object </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertToNativeGeometryObject(arg0 : Geometry) : Object </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertToNativeGeometryObject(arg0 : Geometry, arg1 : int) : Object </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertToJTSGeometryObject(arg0 : Object) : Geometry </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + createPSGeometryPlaceholder() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSchema() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getGeomTypeName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isDuplicateKeyViolationMessage(arg0 : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isFKConstraintViolationMessage(arg0 : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + buildPaginationSql(arg0 : String, arg1 : int, arg2 : int) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + buildLimitSql(arg0 : StringBuilder, arg1 : int) : StringBuilder </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + useSavepoints() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isPmdKnownBroken() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMViewsSQL() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMViewRefreshSQL(arg0 : String) : String </font></td></tr>
<tr><td align="left" balign="left"> + getUpdateSequenceSQL(arg0 : String, arg1 : long) : String </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSelectNextValueFromSequenceSQL(arg0 : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getGeotoolsDBTypeName() : String </font></td></tr>
<tr><td align="left" balign="left"> + convertToNativeGeometryObject(arg0 : String) : Object </td></tr>
<tr><td align="left" balign="left"> + createNativePoint(arg0 : double, arg1 : double, arg2 : int) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="https://b3partners.github.io/jdbc-util/apidocs/nl/b3p/loader/jdbc/GeometryJdbcConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

