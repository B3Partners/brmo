//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.04.11 at 10:59:53 AM CEST 
//


package nl.b3p.topnl.top50nl;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TypeHoogteT50Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="TypeHoogteT50Type"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="dieptelijn"/&gt;
 *     &lt;enumeration value="dieptepunt"/&gt;
 *     &lt;enumeration value="hoogtelijn"/&gt;
 *     &lt;enumeration value="hoogtepunt"/&gt;
 *     &lt;enumeration value="hoogwaterlijn"/&gt;
 *     &lt;enumeration value="laagwaterlijn"/&gt;
 *     &lt;enumeration value="peil:winterpeil"/&gt;
 *     &lt;enumeration value="peil:zomerpeil"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TypeHoogteT50Type", namespace = "http://register.geostandaarden.nl/gmlapplicatieschema/top50nl/1.1.1")
@XmlEnum
public enum TypeHoogteT50Type {

    @XmlEnumValue("dieptelijn")
    DIEPTELIJN("dieptelijn"),
    @XmlEnumValue("dieptepunt")
    DIEPTEPUNT("dieptepunt"),
    @XmlEnumValue("hoogtelijn")
    HOOGTELIJN("hoogtelijn"),
    @XmlEnumValue("hoogtepunt")
    HOOGTEPUNT("hoogtepunt"),
    @XmlEnumValue("hoogwaterlijn")
    HOOGWATERLIJN("hoogwaterlijn"),
    @XmlEnumValue("laagwaterlijn")
    LAAGWATERLIJN("laagwaterlijn"),
    @XmlEnumValue("peil:winterpeil")
    PEIL_WINTERPEIL("peil:winterpeil"),
    @XmlEnumValue("peil:zomerpeil")
    PEIL_ZOMERPEIL("peil:zomerpeil");
    private final String value;

    TypeHoogteT50Type(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeHoogteT50Type fromValue(String v) {
        for (TypeHoogteT50Type c: TypeHoogteT50Type.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
