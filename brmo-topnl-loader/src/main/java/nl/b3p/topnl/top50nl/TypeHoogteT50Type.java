//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference
// Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2018.12.31 at 10:32:54 AM CET
//

package nl.b3p.topnl.top50nl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;

/**
 * Java class for TypeHoogteT50Type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <p>
 *
 * <pre>
 * &lt;simpleType name="TypeHoogteT50Type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="dieptelijn"/>
 *     &lt;enumeration value="dieptepunt"/>
 *     &lt;enumeration value="hoogtelijn"/>
 *     &lt;enumeration value="hoogtepunt"/>
 *     &lt;enumeration value="hoogwaterlijn"/>
 *     &lt;enumeration value="laagwaterlijn"/>
 *     &lt;enumeration value="peil:winterpeil"/>
 *     &lt;enumeration value="peil:zomerpeil"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@XmlType(
    name = "TypeHoogteT50Type",
    namespace = "http://register.geostandaarden.nl/gmlapplicatieschema/top50nl/1.1.1")
@XmlEnum
public enum TypeHoogteT50Type {
  @XmlEnumValue("dieptelijn")
  DIEPTELIJN("dieptelijn"),
  @XmlEnumValue("dieptepunt")
  DIEPTEPUNT("dieptepunt"),
  @XmlEnumValue("hoogtelijn")
  HOOGTELIJN("hoogtelijn"),
  @XmlEnumValue("hoogtepunt")
  HOOGTEPUNT("hoogtepunt"),
  @XmlEnumValue("hoogwaterlijn")
  HOOGWATERLIJN("hoogwaterlijn"),
  @XmlEnumValue("laagwaterlijn")
  LAAGWATERLIJN("laagwaterlijn"),
  @XmlEnumValue("peil:winterpeil")
  PEIL_WINTERPEIL("peil:winterpeil"),
  @XmlEnumValue("peil:zomerpeil")
  PEIL_ZOMERPEIL("peil:zomerpeil");
  private final String value;

  TypeHoogteT50Type(String v) {
    value = v;
  }

  public String value() {
    return value;
  }

  public static TypeHoogteT50Type fromValue(String v) {
    for (TypeHoogteT50Type c : TypeHoogteT50Type.values()) {
      if (c.value.equals(v)) {
        return c;
      }
    }
    throw new IllegalArgumentException(v);
  }
}
