//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.04.11 at 10:59:53 AM CEST 
//


package nl.b3p.topnl.top50nl;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FysiekVoorkomenWaterT50Type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="FysiekVoorkomenWaterT50Type"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="in sluis"/&gt;
 *     &lt;enumeration value="op brug"/&gt;
 *     &lt;enumeration value="in duiker"/&gt;
 *     &lt;enumeration value="in afsluitbare duiker"/&gt;
 *     &lt;enumeration value="in grondduiker"/&gt;
 *     &lt;enumeration value="in afsluitbare grondduiker"/&gt;
 *     &lt;enumeration value="overkluisd"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "FysiekVoorkomenWaterT50Type", namespace = "http://register.geostandaarden.nl/gmlapplicatieschema/top50nl/1.1.1")
@XmlEnum
public enum FysiekVoorkomenWaterT50Type {

    @XmlEnumValue("in sluis")
    IN_SLUIS("in sluis"),
    @XmlEnumValue("op brug")
    OP_BRUG("op brug"),
    @XmlEnumValue("in duiker")
    IN_DUIKER("in duiker"),
    @XmlEnumValue("in afsluitbare duiker")
    IN_AFSLUITBARE_DUIKER("in afsluitbare duiker"),
    @XmlEnumValue("in grondduiker")
    IN_GRONDDUIKER("in grondduiker"),
    @XmlEnumValue("in afsluitbare grondduiker")
    IN_AFSLUITBARE_GRONDDUIKER("in afsluitbare grondduiker"),
    @XmlEnumValue("overkluisd")
    OVERKLUISD("overkluisd");
    private final String value;

    FysiekVoorkomenWaterT50Type(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static FysiekVoorkomenWaterT50Type fromValue(String v) {
        for (FysiekVoorkomenWaterT50Type c: FysiekVoorkomenWaterT50Type.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
