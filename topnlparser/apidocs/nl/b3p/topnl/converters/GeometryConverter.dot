#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// nl.b3p.topnl.converters.GeometryConverter
	c21262 [label=<<table title="nl.b3p.topnl.converters.GeometryConverter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GeometryConverter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GeometryConverter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # log : Log </td></tr>
<tr><td align="left" balign="left"> # LINEARIZATION_TOLERANCE_MULTIPLIER : double </td></tr>
<tr><td align="left" balign="left"> # SRID : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GeometryConverter() </td></tr>
<tr><td align="left" balign="left"> + convertGeometry(el : Element) : Geometry </td></tr>
		</table></td></tr>
		</table>>, URL="./GeometryConverter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.topnl.converters.Converter
	c21263 [label=<<table title="nl.b3p.topnl.converters.Converter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Converter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Converter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # gc : GeometryConverter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Converter() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convert(jaxbObjects : List&lt;&gt;) : List&lt;TopNLEntity&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertObject(jaxbObject : Object) : TopNLEntity </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertFeatureCollection(jaxbObject : List&lt;&gt;) : List&lt;TopNLEntity&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertHoogte(jaxbObject : Object) : Hoogte </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertFunctioneelGebied(jaxbObject : Object) : FunctioneelGebied </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertGebouw(jaxbObject : Object) : Gebouw </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertGeografischGebied(jaxbObject : Object) : GeografischGebied </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertInrichtingselement(jaxbObject : Object) : Inrichtingselement </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertPlaats(jaxbObject : Object) : Plaats </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertRegistratiefGebied(jaxbObject : Object) : RegistratiefGebied </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertRelief(jaxbObject : Object) : Relief </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertPlanTopografie(jaxbObject : Object) : PlanTopografie </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertSpoorbaandeel(jaxbObject : Object) : Spoorbaandeel </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertTerrein(jaxbObject : Object) : Terrein </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertWaterdeel(jaxbObject : Object) : Waterdeel </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + convertWegdeel(jaxbObject : Object) : Wegdeel </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Converter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// nl.b3p.topnl.converters.GeometryConverter NAVASSOC com.vividsolutions.jts.geom.GeometryFactory
	c21262:p -> c21358:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// nl.b3p.topnl.converters.Converter NAVASSOC nl.b3p.topnl.converters.GeometryConverter
	c21263:p -> c21262:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.vividsolutions.jts.geom.GeometryFactory
	c21358 [label=<<table title="com.vividsolutions.jts.geom.GeometryFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/com/vividsolutions/jts/geom/GeometryFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GeometryFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : PrecisionModel, arg1 : int, arg2 : CoordinateSequenceFactory) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : CoordinateSequenceFactory) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : PrecisionModel) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory(arg0 : PrecisionModel, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + GeometryFactory() </td></tr>
<tr><td align="left" balign="left"> + createPointFromInternalCoord(arg0 : Coordinate, arg1 : Geometry) : Point </td></tr>
<tr><td align="left" balign="left"> + toPointArray(arg0 : Collection&lt;&gt;) : Point[] </td></tr>
<tr><td align="left" balign="left"> + toGeometryArray(arg0 : Collection&lt;&gt;) : Geometry[] </td></tr>
<tr><td align="left" balign="left"> + toLinearRingArray(arg0 : Collection&lt;&gt;) : LinearRing[] </td></tr>
<tr><td align="left" balign="left"> + toLineStringArray(arg0 : Collection&lt;&gt;) : LineString[] </td></tr>
<tr><td align="left" balign="left"> + toPolygonArray(arg0 : Collection&lt;&gt;) : Polygon[] </td></tr>
<tr><td align="left" balign="left"> + toMultiPolygonArray(arg0 : Collection&lt;&gt;) : MultiPolygon[] </td></tr>
<tr><td align="left" balign="left"> + toMultiLineStringArray(arg0 : Collection&lt;&gt;) : MultiLineString[] </td></tr>
<tr><td align="left" balign="left"> + toMultiPointArray(arg0 : Collection&lt;&gt;) : MultiPoint[] </td></tr>
<tr><td align="left" balign="left"> + toGeometry(arg0 : Envelope) : Geometry </td></tr>
<tr><td align="left" balign="left"> + getPrecisionModel() : PrecisionModel </td></tr>
<tr><td align="left" balign="left"> + createPoint(arg0 : Coordinate) : Point </td></tr>
<tr><td align="left" balign="left"> + createPoint(arg0 : CoordinateSequence) : Point </td></tr>
<tr><td align="left" balign="left"> + createMultiLineString(arg0 : LineString[]) : MultiLineString </td></tr>
<tr><td align="left" balign="left"> + createGeometryCollection(arg0 : Geometry[]) : GeometryCollection </td></tr>
<tr><td align="left" balign="left"> + createMultiPolygon(arg0 : Polygon[]) : MultiPolygon </td></tr>
<tr><td align="left" balign="left"> + createLinearRing(arg0 : Coordinate[]) : LinearRing </td></tr>
<tr><td align="left" balign="left"> + createLinearRing(arg0 : CoordinateSequence) : LinearRing </td></tr>
<tr><td align="left" balign="left"> + createMultiPoint(arg0 : Point[]) : MultiPoint </td></tr>
<tr><td align="left" balign="left"> + createMultiPoint(arg0 : Coordinate[]) : MultiPoint </td></tr>
<tr><td align="left" balign="left"> + createMultiPoint(arg0 : CoordinateSequence) : MultiPoint </td></tr>
<tr><td align="left" balign="left"> + createPolygon(arg0 : LinearRing, arg1 : LinearRing[]) : Polygon </td></tr>
<tr><td align="left" balign="left"> + createPolygon(arg0 : CoordinateSequence) : Polygon </td></tr>
<tr><td align="left" balign="left"> + createPolygon(arg0 : Coordinate[]) : Polygon </td></tr>
<tr><td align="left" balign="left"> + createPolygon(arg0 : LinearRing) : Polygon </td></tr>
<tr><td align="left" balign="left"> + buildGeometry(arg0 : Collection&lt;&gt;) : Geometry </td></tr>
<tr><td align="left" balign="left"> + createLineString(arg0 : Coordinate[]) : LineString </td></tr>
<tr><td align="left" balign="left"> + createLineString(arg0 : CoordinateSequence) : LineString </td></tr>
<tr><td align="left" balign="left"> + createGeometry(arg0 : Geometry) : Geometry </td></tr>
<tr><td align="left" balign="left"> + getSRID() : int </td></tr>
<tr><td align="left" balign="left"> + getCoordinateSequenceFactory() : CoordinateSequenceFactory </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/com/vividsolutions/jts/geom/GeometryFactory.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

