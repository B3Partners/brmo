dist: trusty
sudo: required
language: java

env:
  global:
    - secure: "mmLyX+VjQpLA7LQ79iIrBPjw/vnJC4Loda7BOyIy+H2seQJAwqDczG09aToTOkM/mmENAb08xv6JJ2PbsZqSZ3tTMXNxTOh4dGtR9DnTjtDzD4O6IHEDVOSbFndIsSEsQw4LXJWbbJwRJwF5Q+UPl+VLV+HyXbYOAmPAD96hXTA="
    - secure: "NynQI56H74dDi6sK4wxPawnLoLsrzADKmD8Jl7w3yQnYTfVU7zP07KeJKoIWhFaYB3GCKyG2qdeM1I5DOeim183c0h51WcQTVvHX3o1D3DyrdfuhqKTBXmAUXJObp/jUoABD2KKejSKZj+mkzqutITMUUbHDiMu5PD6WXEuCYT8="
    - PG_VERSION="9.6"
    - PROFILE="postgresql"
    - MVN_VERSION="3.6.0"

addons:
  postgresql: 9.6
  apt:
    packages:
      - postgresql-9.6-postgis-2.3
      - graphviz
  hostname: travis-brmo
  hosts: travis-brmo

jdk:
  - oraclejdk8
  - openjdk8

matrix:
  fast_finish: true
  allow_failures:
    # vanwege build timeout (soms)
    #- name: "MS SQL server 2017"
    # WIP..
    - name: "PostgreSQL 11"
  include:
  - name: "Oudste supported PostgreSQL"
    jdk: oraclejdk8
    # final release (==EOL): Feb 13, 2020
    # https://www.postgresql.org/support/versioning/
    env: PG_VERSION="9.4"
    addons:
      postgresql: 9.4
      apt:
        packages:
          - postgresql-9.4-postgis-2.3
  - name: "PostgreSQL 11"
    group: edge
    dist: xenial
    jdk: openjdk8
    env: PG_VERSION="11"
    addons:
      postgresql: 11
      apt:
        packages:
          - postgresql-11
          - postgresql-client-11
          - postgresql-11-postgis-2.5
  - name: "PostgreSQL 10"
    group: edge
    dist: xenial
    jdk: openjdk8
    env: PG_VERSION="10"
    addons:
      postgresql: 10
      apt:
        packages:
          - postgresql-10
          - postgresql-client-10
          - postgresql-10-postgis-2.4
 #         - openjdk-8-jdk
  - name: "MS SQL server 2017"
    group: edge
    jdk: openjdk8
    dist: xenial
    sudo: required
#    addons:
#      apt:
#        packages:
#          - openjdk-8-jdk
    env: 
      - PG_VERSION=""
      - PROFILE="mssql -Dmssql.instancename=''"
  - name: "database upgrades"
    jdk: openjdk8
    env: 
      - PROFILE="postgresql -Ddatabase.upgrade=true"

cache:
  directories:
  - $HOME/.m2
  - $HOME/downloads

# before_cache:

before_install:
  - git lfs pull
  # hack voor travis xenial images, zie: https://github.com/travis-ci/travis-ci/issues/10290
  - if [ "$PG_VERSION" == "" ] || [ "$PG_VERSION" == "10" ] || [ "$PG_VERSION" == "11" ]; then
       PATH=$(echo "$PATH" | sed -e 's/:\/usr\/local\/lib\/jvm\/openjdk11\/bin//');
       JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64;
    fi
  # installeer een up-2-date Maven versie
  - wget -nc https://www-eu.apache.org/dist/maven/maven-3/$MVN_VERSION/binaries/apache-maven-$MVN_VERSION-bin.zip -P $HOME/downloads/
  - unzip -qq $HOME/downloads/apache-maven-$MVN_VERSION-bin.zip
  - export M2_HOME=$PWD/apache-maven-$MVN_VERSION
  - export PATH=$M2_HOME/bin:$PATH
  - mvn -v
  - export PAGER=cat
  - if [ "$PG_VERSION" == "11" ]; then
       sudo sed -i 's/port = 5433/port = 5432/' /etc/postgresql/11/main/postgresql.conf;
       sudo cp /etc/postgresql/{9.5,11}/main/pg_hba.conf;
       sudo service postgresql restart;
    fi
  - if [ "$PROFILE" == "postgresql" ]; then
       sh ".travis/install-pgsql.sh";
    elif  [ "$PROFILE" == "postgresql -Ddatabase.upgrade=true" ]; then
       sh ".travis/getlastRelease.sh";
       sh ".travis/install-pgsql.sh";
    else
       sudo service postgresql stop;
       sh ".travis/install-mssql.sh";
    fi
  # setup mssql
  - unset _JAVA_OPTIONS
  - ulimit -a
  - free -h

install:
  # install all dependencies + artifacts and create any DB scripts without any testing
  - travis_wait 20 mvn install -Dmaven.test.skip=true -Dtest.onlyITs= -B -V -fae -Pstandard-with-extra-repos,$PROFILE
  - projectversion=$(grep "<version>.*<.version>" -m1 pom.xml | sed -e "s/^.*<version/<version/" | cut -f2 -d">"| cut -f1 -d"<")
  - echo $projectversion
  - export PROJECTVERSION=$projectversion
  - sed -i s/\${project.version}/$projectversion/g ./brmo-persistence/db/05_create_brmo_metadata_postgresql.sql
  - sed -i s/\${project.version}/$projectversion/g ./brmo-persistence/db/05_create_brmo_metadata_sqlserver.sql
  - cat ./brmo-persistence/db/05_create_brmo_metadata_postgresql.sql

before_script:
  # dit dient na afloop van de 'install' gedaan te worden omdat (een deel van) de sql gegenereerd wordt
  - ls -l ./brmo-persistence/db/*.sql
  - ls -l ./datamodel/generated_scripts/*.sql
  - ls -l ./topparser/src/main/resources/nl/b3p/topnl/database/*.sql
  - find ./bgt-gml-loader/target/generated-resources/ddl/ -name '*.sql' -print
  # ophalen actuele topnl test data alleen voor postgres
  - if [ "$PROFILE" == "postgresql" ]; then
       sh ".travis/setup-pgsql.sh";
       sh ".jenkins/data-prepare-topnl.sh";
    elif  [ "$PROFILE" == "postgresql -Ddatabase.upgrade=true" ]; then
       sh ".travis/setup-old-pgsql.sh";
    else
       sh ".travis/setup-mssql.sh";
    fi

script:
  # run unit tests voor alle modules mits actuele postgresql
  - if [ "$PROFILE" != "postgresql -Ddatabase.upgrade=true" ]; then
       travis_wait 20 mvn --settings .travis/settings.xml -e test -B -Pstandard-with-extra-repos,$PROFILE -pl '!brmo-dist' -Dtest.onlyITs=false;
    fi
  # run integratie tests voor veschillende modules, per module
  - if  [ "$PROFILE" == "postgresql -Ddatabase.upgrade=true" ]; then
        .travis/execute-upgrades-pgsql.sh staging;
        .travis/execute-upgrades-pgsql.sh rsgb;
        .travis/execute-upgrades-pgsql.sh rsgbbgt;
        mvn -e -B -P$PROFILE -pl 'datamodel' resources:testResources compiler:testCompile surefire:test;
    fi
  # run integratie tests voor brmo-loader module
  - echo 'integratie tests voor brmo-loader module'
  - travis_wait 40 mvn -e verify -B -P$PROFILE -Dtest.onlyITs=true -pl 'brmo-loader'
  # run integratie tests voor brmo-service module
  - echo 'run integratie tests voor brmo-service module'
  - mvn -e verify -B -P$PROFILE -Dtest.onlyITs=true -pl 'brmo-service'
  #
  # andere modules alleen tegen pgsql testen want dat kost te veel tijd op dit systeem
  #  er draait ook nog een windows server met mssql versie ergens
  #
  # run integratie tests voor bgt-gml-loader module
  - if [ "$PROFILE" == "postgresql" ]; then
        echo 'run integratie tests voor bgt-gml-loader module';
        mvn -e verify -B -P$PROFILE -Dtest.onlyITs=true -pl 'bgt-gml-loader';
    fi
  # run integratie tests voor brmo-soap module
  - if [ "$PROFILE" == "postgresql" ]; then
        echo 'integratie tests voor brmo-soap module';
        mvn -e verify -B -P$PROFILE -Dtest.onlyITs=true -pl 'brmo-soap';
    fi
  # run integratie tests voor brmo-stufbg204 module tegen pgsql
  - if [ "$PROFILE" == "postgresql" ]; then
        echo 'integratie tests voor brmo-stufbg204 module';
        mvn -e verify -B -P$PROFILE -Dtest.onlyITs=true -pl 'brmo-stufbg204';
    fi
  # run integratie tests voor brmo-commandline module tegen pgsql
  - if [ "$PROFILE" == "postgresql" ]; then
        echo 'integratie tests voor brmo-commandline module';
        mvn -e verify -B -P$PROFILE -Dtest.onlyITs=true -pl 'brmo-commandline';
    fi
  #
  # Linting
  # test of de javadoc compliant is met java-8 strict checks, noodzakelijk voor succesvolle release
  #
  - if [ "$TRAVIS_JDK_VERSION" == oraclejdk8 ] && [ "$PG_VERSION" == "9.6" ]; then
         echo 'Javadoc checks';
         travis_wait 30 mvn javadoc:javadoc;
    fi
  - if [ "$TRAVIS_JDK_VERSION" == oraclejdk8 ] && [ "$PG_VERSION" == "9.6" ]; then
         echo 'Test Javadoc checks';
         travis_wait 30 mvn javadoc:test-javadoc;
    fi

# after_failure:
# after_success:

after_script:
  # deploy maven site van master branch als test succes
  - if [ "$TRAVIS_JDK_VERSION" == oraclejdk8 ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_TEST_RESULT" == 0 ] && [ "$PG_VERSION" == "9.6" ]; then
         travis_wait 30 mvn -B -e -T1 site site:stage --settings .travis/settings.xml;
         mvn scm-publish:publish-scm --settings .travis/settings.xml;
    fi

notifications:
  slack:
    secure: C6gBHY3vYCn80KOvZhTeoJWbSy22PWdq8+fQtd32v/9/ZhsIxbeN7tHQE0IE/MKp/bQ0YijTeLr4LFQfOAozxM3qwyP7fTNfu0MZG2J/tvReMoJnylQ8pdFIsHlTTXD8RicfhjP+6pRjorctK11htC+uE+aN0TzdprNeSnsdNvk=
