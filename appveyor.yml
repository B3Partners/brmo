version: 2.0.4.{build}-{branch}
pull_requests:
  do_not_increment_build_number: true
clone_folder: c:\projects\brmo
clone_script: echo skip
skip_tags: true
max_jobs: 4
image: Visual Studio 2019

environment:
  BGT_ONLY_ITESTS: false
  LOADER_ONLY_ITESTS: false
  OTHER_ITESTS: true
  SQL: MSSQL$SQL2017
  INSTANCENAME: SQL2017
  DOCKERHOST: "-DdockerHost=tcp://localhost:2375"
  SQLCMDINI: .\appveyor\init.sql
  JAVA_HOME: C:\Program Files\Java\jdk11
  # Microsoft SQL Server 2016 Service Pack 2 heeft een EOL (einde basisondersteuning) van 13-7-2021
  # wegens in de views gebruikte functies wordt mssql 2016 niet meer ondersteund voor brmo
  # Microsoft SQL Server 2019 is de jongst-beschikbare release op AppVeyor, maar testen we (ook) op Travis-CI (veel sneller)
  matrix:
    # bgt loader
    - BGT_ONLY_ITESTS: true
      OTHER_ITESTS: false

    # integratie tests + mssql 2019
    - SQL: MSSQL$SQL2019
      INSTANCENAME: SQL2019

    # brmo loader + mssql 2017
    - LOADER_ONLY_ITESTS : true
      OTHER_ITESTS : false

    # brmo loader + mssql 2019
    - LOADER_ONLY_ITESTS: true
      OTHER_ITESTS: false
      SQL: MSSQL$SQL2019
      INSTANCENAME: SQL2019

matrix:
  fast_finish: false

init:
  - git config --global core.autocrlf input
  - git config --global core.safecrlf true
  - cmd: net start %SQL%

install:
  - docker version
  - choco install codecov
  - choco install maven
  - cmd: echo %PATH%
  - cmd: java -version
  - cmd: mvn -v
  - cd C:\projects\brmo
  - git init %APPVEYOR_BUILD_FOLDER%
  - cd %APPVEYOR_BUILD_FOLDER%
  - git remote add origin https://github.com/%APPVEYOR_REPO_NAME%.git
  - ps: |
        if ($Env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null) {
           git fetch -qfup --depth=5 origin +$Env:APPVEYOR_REPO_BRANCH +refs/tags/*:refs/tags/*
           git checkout -qf $Env:APPVEYOR_REPO_COMMIT
        } else {
           git fetch -q origin +refs/pull/$Env:APPVEYOR_PULL_REQUEST_NUMBER/merge:
           git checkout -qf FETCH_HEAD
        }
  - git lfs pull
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-http-proxy.ps1'))
  - ps: .\.appveyor\set-maven-proxy.ps1

# initial build/code generation, no testing
build_script:
  - mvn clean install -Dmaven.test.skip=true -Dtest.onlyITs= -B -V -fae -q -Pmssql -pl "!brmo-dist" %DOCKERHOST%

# services worden na install gestart en we hebben gegenereerde sql nodig
after_build:
  - cmd: echo "aanmaken en opzetten STAGING DB"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "CREATE DATABASE staging"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "ALTER DATABASE staging SET RECOVERY SIMPLE"
  - dir .\brmo-persistence\db\
  - ps: ([xml]$pom=Get-Content .\pom.xml)
  - ps: (Get-Content .\brmo-persistence\db\create-brmo-persistence-sqlserver.sql) -replace '\${project.version}', $pom.project.version | Set-Content .\brmo-persistence\db\create-brmo-persistence-sqlserver.sql
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "staging" -i .\brmo-persistence\db\create-brmo-persistence-sqlserver.sql
#
  - cmd: echo "aanmaken en opzetten RSGB DB"
  - cmd: SET SQLCMDINI=.\.appveyor\init.sql
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "CREATE DATABASE rsgb"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "ALTER DATABASE rsgb SET RECOVERY SIMPLE"
  - dir .\datamodel\generated_scripts\
  - sqlcmd -r0 -x -b -S (local)\%INSTANCENAME% -U sa -P Password12! -d "rsgb" -I -i .\datamodel\generated_scripts\datamodel_sqlserver.sql
# duurt lang en gemeente/wijk geom hebben we niet echt nodig voor de tests
#  - sqlcmd -r0 -x -b -S (local)\%INSTANCENAME% -U sa -P Password12! -d "rsgb" -I -i .\datamodel\utility_scripts\sqlserver\111a_update_gemeente_geom.sql
# mislukt op AppVeyor: There is insufficient system memory in resource pool 'internal' to run this query.
#  - sqlcmd -r0 -x -b -S (local)\%INSTANCENAME% -U sa -P Password12! -d "rsgb" -I -i .\datamodel\utility_scripts\sqlserver\113a_update_wijk_geom.sql
#
  - cmd: echo "aanmaken en opzetten RSGBBGT DB"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "CREATE DATABASE bgttest"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "ALTER DATABASE bgttest SET RECOVERY SIMPLE"
  - dir .\bgt-gml-loader\target\generated-resources\ddl\sqlserver\
  - sqlcmd -r0 -b -S (local)\%INSTANCENAME% -I -U sa -P Password12! -d "bgttest" -i .\bgt-gml-loader\target\generated-resources\ddl\sqlserver\create_rsgb_bgt.sql
#
  - cmd: echo "aanmaken en opzetten TOPNL DB"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "CREATE DATABASE topnl"
  - sqlcmd -S (local)\%INSTANCENAME% -U sa -P Password12! -d "master" -Q "ALTER DATABASE topnl SET RECOVERY SIMPLE"
  - dir .\brmo-topnl-loader\src\main\resources\nl\b3p\topnl\database
  - sqlcmd -r0 -b -S (local)\%INSTANCENAME% -I -U sa -P Password12! -d "topnl" -i .\brmo-topnl-loader\src\main\resources\nl\b3p\topnl\database\sqlserver.sql
#
  - cmd: echo "computer name:" %COMPUTERNAME%
  - cmd: echo "instance name:" %INSTANCENAME%
  - ps: .\.appveyor\setting-tcp-ip-ports.ps1

test_script:
  # unit tests
  - if "%OTHER_ITESTS%"=="true" mvn -e -fae -B -Pmssql test -Dtest.persistence.unit=brmo.persistence.microsoftsqlserver -pl "!brmo-dist" %DOCKERHOST%
  - if "%OTHER_ITESTS%"=="true" mvn -e -fae -B -Pmssql -pl "datamodel" resources:testResources compiler:testCompile surefire:test -Dtest="!*UpgradeTest,!P8*"
  # integratie tests
  # run integratie tests voor brmo-loader module
  - if "%LOADER_ONLY_ITESTS%"=="true" mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl "brmo-loader" -Dmssql.instancename=%INSTANCENAME%
  # run integratie tests voor bgt-gml-loader module (~30min)
  - if "%BGT_ONLY_ITESTS%"=="true" mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl "bgt-gml-loader" -Dmssql.instancename=%INSTANCENAME%
  # run integratie tests voor brmo-service module
  - if "%OTHER_ITESTS%"=="true" mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl "brmo-service" -Dmssql.instancename=%INSTANCENAME%
  # run integratie tests voor brmo-soap module
  - if "%OTHER_ITESTS%"=="true" mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl "brmo-soap" -Dmssql.instancename=%INSTANCENAME%
  # run integratie tests voor brmo-stufbg204 module
  - if "%OTHER_ITESTS%"=="true" mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl "brmo-stufbg204" -Dmssql.instancename=%INSTANCENAME%
  # run integratie tests voor brmo-commandline module
  - if "%OTHER_ITESTS%"=="true" mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl "brmo-commandline" -Dmssql.instancename=%INSTANCENAME%

after_test:
  - mvn clean build-helper:remove-project-artifact

on_success:
  # report code coverage
  - codecov -f target/site/jacoco-it/jacoco.xml target/site/jacoco/jacoco.xml

cache:
  - C:\Users\appveyor\.m2\repository -> pom.xml
  - C:\Users\appveyor\downloads -> appveyor.yml
  - '.git\lfs'
