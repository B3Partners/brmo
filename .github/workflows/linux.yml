name: Ubuntu PostgreSQL build

on:
  - push
  - pull_request

concurrency: # cancel on PR pushes
  # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ github.workflow }}-${{ ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release' ) && format('ci-master-{0}', github.sha) || format('ci-master-{0}', github.ref) }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Djava.awt.headless=true -Xms8G -Xmx12G -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Dtest.persistence.unit=brmo.persistence.postgresql
  PGPASSWORD: postgres
  PGUSER: postgres
  PGDATABASE: postgres

jobs:
  build:
    name: Java ${{ matrix.java }} / PostGIS ${{ matrix.postgis }}
    runs-on: [ ubuntu-20.04 ]
    strategy:
      fail-fast: false
      matrix:
        java: [ 11 ]
        java-dist: [ 'temurin' ]
        # docker image tags from https://hub.docker.com/r/postgis/postgis/tags?page=1&ordering=last_updated
        # export POSTGRES_PASSWORD=postgres
        # export PGPASSWORD=postgres
        # docker run --rm -e POSTGRES_PASSWORD=postgres -h brmo-dev-tmp --name brmo-dev-tmp -p 5432:5432 -d postgis/postgis:14-3.2 -c max_connections=200
        # zie ook https://www.postgresql.org/support/versioning/
        postgis: 
            # tot 12-2022
            - 10-2.5-alpine
            # tot 11-2023  
            - 11-3.1-alpine
            - 12-3.2-alpine
            # downgraded for select count() bug in recent 13/14
            # https://www.postgresql.org/message-id/CAHUie24ddN%2BpDNw7fkhNrjrwAX%3DfXXfGZZEHhRuofV_N_ftaSg%40mail.gmail.com
            # er is een fix/patch van 11 feb 2022 (na release van 14.2/13.6/12.10/11.15
            - 13-3.1-alpine
            - 14-3.1-alpine

    services:
      postgres:
        image: postgis/postgis:${{ matrix.postgis }}
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 15s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Cache test data
        uses: actions/cache@v3
        with:
          path: ~/downloads
          key: downloads-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            downloads-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.java-dist }}
          java-version: ${{ matrix.java }}

      - name: Install extra software
        run: sudo apt install -y --no-install-recommends xmlstarlet

      - name: Priming build
        run: |
          mvn clean install -Dmaven.test.skip=true -Ddocker.skip=true -Dtest.onlyITs= -B -V -fae -Ppostgresql
          projectversion=$(grep "<version>.*<.version>" -m1 pom.xml | sed -e "s/^.*<version/<version/" | cut -f2 -d">"| cut -f1 -d"<")
          echo $projectversion
          export PROJECTVERSION=$projectversion
          sed -i s/\${project.version}/$projectversion/g ./brmo-persistence/db/create-brmo-persistence-postgresql.sql

      - name: Set up PostgreSQL
        run: |
          psql --version
          psql -U postgres -h localhost -c 'SELECT version();'
          .build/ci/pgsql-create-databases.sh
          .build/ci/pgsql-setup.sh

      - name: Prepare TopNL Data
        run: |
          .build/ci/data-prepare-topnl.sh

      - name: Test
        run: |
          mvn -e test -B -Ppostgresql -pl '!brmo-dist' -Dtest.onlyITs=false

      - name: Verify bag2-loader
        # bag schema gedropped vanwege dbunit beperking "ambiguous table LIGPLAATS" en we hebben geen zin alle brmo-loader test code te herschrijven
        run: |
          mvn -e verify -B -Ppostgresql -T1 -Dtest.onlyITs=true -pl 'bag2-loader'
          .build/ci/pgsql-setup-bag2_views.sh
          mvn resources:testResources compiler:testCompile surefire:test -Ppostgresql -pl datamodel -Dtest='!*UpgradeTest,!P8*'
          .build/ci/pgsql-drop-bag2_schema.sh

      - name: Verify bgt-loader
        run: mvn -e verify -B -Ppostgresql -T1 -Dtest.onlyITs=true -pl 'bgt-loader'

      - name: Verify brmo-loader
        run: mvn -e verify -B -Ppostgresql -Dtest.onlyITs=true -pl 'brmo-loader'

      - name: Verify brmo-service
        run: mvn -e verify -B -Ppostgresql -Dtest.onlyITs=true -pl 'brmo-service'

      - name: Verify brmo-soap
        run: mvn -e verify -B -Ppostgresql -Dtest.onlyITs=true -pl 'brmo-soap'

      - name: Verify brmo-stufbg204
        run: mvn -e verify -B -Ppostgresql -Dtest.onlyITs=true -pl 'brmo-stufbg204'

      - name: Verify brmo-commandline
        run: mvn -e verify -B -Ppostgresql -Dtest.onlyITs=true -pl 'brmo-commandline'

      - name: Verify nhr-loader
        run: mvn -e verify -B -Ppostgresql -Dtest.onlyITs=true -pl 'nhr-loader'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

      - name: Cleanup build artifacts
        run: |
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}

  javadoc:
    name: JavaDoc Check
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: false

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Install extra software
        run: sudo apt install -y --no-install-recommends graphviz

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Priming build
        run: |
          mvn clean install -Dmaven.test.skip=true -Ddocker.skip=true -Dtest.onlyITs= -B -V -fae -Ppostgresql -pl '!brmo-dist'

      - name: Javadoc
        run: mvn javadoc:javadoc

      - name: Test Javadoc
        run: mvn javadoc:test-javadoc

      - name: Cleanup build artifacts
        run: |
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}


  dependency-review:
    name: 'Dependency Review'
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3

      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v1