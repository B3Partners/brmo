name: Oracle Database Upgrade

on:
  push:
      branches:
        - 'master'
  pull_request:

concurrency: # cancel on PR pushes
  # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ github.workflow }}-${{ ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release' ) && format('ci-master-{0}', github.sha) || format('ci-master-{0}', github.ref) }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Djava.awt.headless=true -Xms8G -Xmx12G -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Dtest.persistence.unit=brmo.persistence.oracle

jobs:
  build:
    name: 'Oracle XE'
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: 'Cache test data en laatste release'
        uses: actions/cache@v4
        with:
          path: ~/downloads
          key: downloads-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            downloads-

      - name: 'Set up JDK'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'maven'

      - name: 'Set up Maven'
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: '3.9.6'

      - name: 'datamodel Priming build'
        run: |
          mvn clean install -Dmaven.test.skip=true -Ddocker.skip=true -Dtest.onlyITs= -B -V -fae -pl 'datamodel' -am -DskipQA=true

      - name: 'Get last release'
        run: |
          .build/ci/getlastRelease.sh

      - name: 'Setup Oracle XE'
        run: |
          ./.build/ci/oracle-start-docker.sh 21.3.0-full
          ./.build/ci/oracle-setup-previous.sh

      - name: 'Upgrade databases'
        run: |
          .build/ci/oracle-execute-upgrades.sh staging
          .build/ci/oracle-execute-upgrades.sh rsgb
          .build/ci/oracle-execute-upgrade-extras.sh rsgb
          .build/ci/oracle-execute-upgrades.sh rsgbbgt
          .build/ci/oracle-execute-upgrades.sh bag
          .build/ci/oracle-execute-upgrades.sh brk

      - name: 'Test'
        run: |
          mvn -e -B -Poracle -pl 'datamodel' resources:testResources compiler:testCompile surefire:test -Dtest='*UpgradeTest' -Ddatabase.upgrade=true -DskipQA=true

      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: 'Cleanup build artifacts'
        run: |
          mvn clean build-helper:remove-project-artifact
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
