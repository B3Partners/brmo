name: Ubuntu MS SQL build

on:
  - push

concurrency: # cancel on PR pushes
  # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ github.workflow }}-${{ ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release' ) && format('ci-master-{0}', github.sha) || format('ci-master-{0}', github.ref) }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Djava.awt.headless=true -Xms8G -Xmx12G -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 -Dmaven.wagon.http.retryHandler.count=3 -Dbrmo.persistence.microsoftsqlserver

jobs:
  build:
    name: MS SQL ${{ matrix.mssql }} online test
    runs-on: [ ubuntu-20.04 ]
    strategy:
      matrix:
        mssql: [ 2019-latest ]
        java: [ 11 ]

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Cache Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Cache test data
        uses: actions/cache@v2
        with:
          path: ~/downloads
          key: downloads-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            downloads-

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Install extra software
        run: sudo apt install -y --no-install-recommends xmlstarlet

      - name: Priming build
        run: |
          mvn clean install -Dmaven.test.skip=true -Ddocker.skip=true -Dtest.onlyITs= -B -V -fae -Pmssql -pl '!brmo-dist'
          projectversion=$(grep "<version>.*<.version>" -m1 pom.xml | sed -e "s/^.*<version/<version/" | cut -f2 -d">"| cut -f1 -d"<")
          echo $projectversion
          export PROJECTVERSION=$projectversion
          sed -i s/\${project.version}/$projectversion/g ./brmo-persistence/db/create-brmo-persistence-sqlserver.sql

      - name: Setup MS SQL ${{ matrix.mssql }}
        run: |
          ./.build/ci/mssql-start-docker.sh ${{ matrix.mssql }}
          ./.build/ci/mssql-setup.sh

      - name: Test
        run: |
          mvn -e test -B -Pmssql -pl '!brmo-dist' -Dtest.onlyITs=false
          mvn resources:testResources compiler:testCompile surefire:test -Pmssql -pl datamodel -Dtest='!*UpgradeTest,!P8*'

      - name: Verify bgt-loader
        run: mvn -e verify -B -Pmssql -T1 -Dtest.onlyITs=true -pl 'bgt-loader'

      - name: Verify brmo-loader
        run: mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl 'brmo-loader'

      - name: Verify brmo-service
        run: mvn -e verify -B -Pmssql -T1 -Dtest.onlyITs=true -pl 'brmo-service'

      - name: Verify brmo-soap
        run: mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl 'brmo-soap'

      - name: Verify brmo-stufbg204
        run: mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl 'brmo-stufbg204'

      - name: Verify brmo-commandline
        run: mvn -e verify -B -Pmssql -Dtest.onlyITs=true -pl 'brmo-commandline'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

      - name: Cleanup build artifacts
        run: |
          mvn clean build-helper:remove-project-artifact
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
